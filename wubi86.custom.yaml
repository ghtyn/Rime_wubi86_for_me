patch:
  speller/max_code_length: 4                        # 最长4码
  speller/auto_select: true                         # 顶字上屏
  speller/auto_select_unique_candidate: true        # 无重码自动上屏

  simplifier:
    opencc_config: s2t.json
    option_name: zh_trad

  switches:
    - name: ascii_mode
      reset: 0
      states: [ 中, 西 ]
    - name: full_shape
      states: [ 半, 全 ]
    - name: extended_charset
      states: [ 常, 广 ]
    - name: ascii_punct
      states: [ 。, ． ]
    - name: zh_trad
      reset: 0
      states: [ 汉, 漢 ]

  engine/filters:
    # OpenCC
    - simplifier                        #将码表中繁体中文转换为简体中文
    - uniquifier                        #过滤重复项
  engine/translators/+:
    - table_translator@fixed
    - lua_translator@date_translator    # 自定义系统变量(日期、时间)输出

  fixed:
    dictionary: wubi86_user
    enable_user_dict: false
    enable_completion: false
    initial_quality: 10000000000000

  translator/dictionary: wubi86_user          #方案选择
  translator/enable_sentence: false           #自动造句
  #translator/enable_encoder: false          #自动造词
  translator/enable_completion: true        #关闭编码自动提示功能
  translator/+:
    comment_format:
      - "xform/~//"

  key_binder:
    import_preset: default
    bindings:
     - {when: has_menu, accept: semicolon, send: 2} #分號選第二重碼
     - {when: has_menu, accept: apostrophe, send: 3} #引號選第三重碼
     - { when: paging, accept: bracketleft, send: Page_Up} #使用[]对候选字翻页
     - { when: has_menu, accept: bracketright, send: Page_Down} #使用[]对候选字翻页
     - { when: paging, accept: Up, send: Page_Up} #使用[]对候选字翻页
     - { when: has_menu, accept: Down, send: Page_Down} #使用[]对候选字翻页
     - { when: has_menu, accept: Left, send: Up} #使用 ← 移动选择候选光标
     - { when: has_menu, accept: Right, send: Down} #使用 → 移动选择候选光标

  ascii_composer/switch_key:
    Shift_L: commit_code # 按左 shift 键，已输入字符上屏，同时切换为英文输入
    Shift_R: commit_code# 按右 shift 键，已输入字符上屏，同时切换为英文输入
    Caps_Lock: commit_code # 按Caps Lock键，已输入编码字符上屏，并切换到英文输入

